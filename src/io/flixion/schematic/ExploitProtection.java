package io.flixion.schematic;

import org.bukkit.GameMode;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockBreakEvent;
import org.bukkit.event.entity.EntityDamageByEntityEvent;
import org.bukkit.event.entity.EntityShootBowEvent;
import org.bukkit.event.entity.EntitySpawnEvent;
import org.bukkit.event.inventory.InventoryDragEvent;
import org.bukkit.event.inventory.InventoryOpenEvent;
import org.bukkit.event.player.PlayerCommandPreprocessEvent;
import org.bukkit.event.player.PlayerDropItemEvent;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.event.player.PlayerItemConsumeEvent;
import org.bukkit.event.player.PlayerPickupItemEvent;
import org.bukkit.event.player.PlayerQuitEvent;

import io.flixion.main.AutoMain;
import io.flixion.main.Utils;

public class ExploitProtection implements Listener {
	private PrintHandler p;
	public ExploitProtection (PrintHandler p) {
		this.p = p;
	}
	
	@EventHandler
	public void useBucket (PlayerInteractEvent e) {
		if (p.isUsingPrinter(e.getPlayer().getUniqueId())) {
			if (e.getPlayer().getItemInHand().getType().toString().contains("BUCKET")) {
				e.setCancelled(true);
				e.getPlayer().sendMessage(Utils.cc(AutoMain.langManager.getLangHash().get("PRINTER_BAD_ACTION")));
			}
		}
	}
	
	@EventHandler
	public void useBow (EntityShootBowEvent e) {
		if (p.isUsingPrinter(e.getEntity().getUniqueId())) e.setCancelled(true);
		e.getEntity().sendMessage(Utils.cc(AutoMain.langManager.getLangHash().get("PRINTER_BAD_ACTION")));
	}
	
	@EventHandler
	public void throwPotion (EntitySpawnEvent e) {
		if (p.isUsingPrinter(e.getEntity().getUniqueId())) e.setCancelled(true);
		e.getEntity().sendMessage(Utils.cc(AutoMain.langManager.getLangHash().get("PRINTER_BAD_ACTION")));
	}
	
	@EventHandler
	public void consumeItem (PlayerItemConsumeEvent e) {
		if (p.isUsingPrinter(e.getPlayer().getUniqueId())) e.setCancelled(true);
		e.getPlayer().sendMessage(Utils.cc(AutoMain.langManager.getLangHash().get("PRINTER_BAD_ACTION")));
	}
	
	@EventHandler
	public void pickupItem (PlayerPickupItemEvent e) {
		if (p.isUsingPrinter(e.getPlayer().getUniqueId())) e.setCancelled(true);
	}
	
	@EventHandler
	public void blockDrop (PlayerDropItemEvent e) {
		if (p.isUsingPrinter(e.getPlayer().getUniqueId())) e.setCancelled(true);
		e.getPlayer().sendMessage(Utils.cc(AutoMain.langManager.getLangHash().get("PRINTER_BAD_ACTION")));
	}
	
	@EventHandler
	public void inventoryInteract (InventoryOpenEvent e) {
		if (p.isUsingPrinter(e.getPlayer().getUniqueId())) e.setCancelled(true);
		e.getPlayer().sendMessage(Utils.cc(AutoMain.langManager.getLangHash().get("PRINTER_BAD_ACTION")));
	}
	
	@EventHandler
	public void attemptPvP (EntityDamageByEntityEvent e) {
		if (p.isUsingPrinter(e.getDamager().getUniqueId())) e.setCancelled(true);
		e.getDamager().sendMessage(Utils.cc(AutoMain.langManager.getLangHash().get("PRINTER_BAD_ACTION")));
	}
	
	@EventHandler
	public void useCommand (PlayerCommandPreprocessEvent e) {
		if (p.isUsingPrinter(e.getPlayer().getUniqueId())) {
			if (!p.getAllowedCommands().contains(e.getMessage().toLowerCase().split(" ")[0])) e.setCancelled(true);
			e.getPlayer().sendMessage(Utils.cc(AutoMain.langManager.getLangHash().get("PRINTER_COMMAND_NOT_ALLOWED")));
		}
	}
	
	@EventHandler
	public void inventoryDrag (InventoryDragEvent e) {
		if (p.isUsingPrinter(e.getWhoClicked().getUniqueId())) e.setCancelled(true);
		e.getWhoClicked().sendMessage(Utils.cc(AutoMain.langManager.getLangHash().get("PRINTER_BAD_ACTION")));
	}
	
	@EventHandler
	public void breakBlock (BlockBreakEvent e) {
		if (p.isUsingPrinter(e.getPlayer().getUniqueId())) e.setCancelled(true);
		e.getPlayer().sendMessage(Utils.cc(AutoMain.langManager.getLangHash().get("PRINTER_BAD_ACTION")));
	}
	
	@EventHandler
	public void quitInPrinterMode (PlayerQuitEvent e) {
		if (p.isUsingPrinter(e.getPlayer().getUniqueId())) {
			p.getUsingPrinter().get(e.getPlayer().getUniqueId()).cancel();
			p.getUsingPrinter().remove(e.getPlayer().getUniqueId());
			e.getPlayer().setGameMode(GameMode.SURVIVAL);
			e.getPlayer().getInventory().clear();
			e.getPlayer().getInventory().setContents(p.getSavedInventories().get(e.getPlayer().getUniqueId()).get(0));
			e.getPlayer().getInventory().setArmorContents(p.getSavedInventories().get(e.getPlayer().getUniqueId()).get(1));
		}
	}
}
